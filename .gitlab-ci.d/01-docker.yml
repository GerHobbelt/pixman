# Docker build stage
#
# It builds a multi-arch image for all required architectures. Each image can be
# later easily used with properly configured Docker (which uses binfmt and QEMU
# underneath).

docker-pixman:
  stage: docker
  image: quay.io/buildah/stable
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        paths:
          - .gitlab-ci.d/01-docker.yml
          - .gitlab-ci.d/01-docker/
      variables:
        DOCKER_TAG: $CI_COMMIT_REF_SLUG
    - if: $CI_PIPELINE_SOURCE == 'schedule'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

  variables:
    # Use vfs with buildah. Docker offers overlayfs as a default, but Buildah
    # cannot stack overlayfs on top of another overlayfs filesystem.
    STORAGE_DRIVER: vfs

    # Write all image metadata in the docker format, not the standard OCI
    # format. Newer versions of docker can handle the OCI format, but older
    # versions, like the one shipped with Fedora 30, cannot handle the format.
    BUILDAH_FORMAT: docker

    BUILDAH_ISOLATION: chroot
    CACHE_IMAGE: ${CI_REGISTRY_IMAGE}/cache
    CACHE_ARGS: --cache-from ${CACHE_IMAGE} --cache-to ${CACHE_IMAGE}

    PLT_LOOKUP: .gitlab-ci.d/01-docker/platform-lookup.awk
    PLT_TBL: .gitlab-ci.d/01-docker/platform.lut
  before_script:
    # Login to the target registry.
    - echo "${CI_REGISTRY_PASSWORD}" |
        buildah login -u "${CI_REGISTRY_USER}" --password-stdin ${CI_REGISTRY}

    # Docker Hub login is optional, and can be used to circumvent image pull
    # quota for anonymous pulls for base images.
    - echo "${DOCKERHUB_PASSWORD}" |
        buildah login -u "${DOCKERHUB_USER}" --password-stdin docker.io ||
          echo "Failed to login to Docker Hub."
  parallel:
    matrix:
      - PLATFORM:
        - linux/386
        - linux/amd64
        - linux/arm/v5
        - linux/arm/v7
        - linux/arm64/v8
        - linux/mips64el
        - linux/mipsel
        - linux/ppc64le
        - linux/riscv64
  script:
    # Prepare environment.
    - BASE_IMAGE=$(${PLT_LOOKUP} ${PLATFORM} 2 ${PLT_TBL})
    - BASE_IMAGE_TAG=$(${PLT_LOOKUP} ${PLATFORM} 3 ${PLT_TBL})
    - FULL_IMAGE_NAME=${DOCKER_IMAGE_NAME}-$(echo ${PLATFORM} | sed "s|/|-|g")

    # Build and push the image.
    - buildah bud
        --tag ${FULL_IMAGE_NAME}
        --layers
        ${CACHE_ARGS}
        --platform=${PLATFORM}
        --build-arg BASE_IMAGE=${BASE_IMAGE}
        --build-arg BASE_IMAGE_TAG=${BASE_IMAGE_TAG}
        -f Dockerfile .gitlab-ci.d/01-docker/
    - buildah push ${FULL_IMAGE_NAME}
